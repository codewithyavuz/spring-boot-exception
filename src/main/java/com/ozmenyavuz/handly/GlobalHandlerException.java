package com.ozmenyavuz.handly;


import com.ozmenyavuz.exception.BaseException;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.context.request.WebRequest;

import java.net.Inet4Address;
import java.net.UnknownHostException;
import java.util.Date;


//@ControllerAdvice anotasyonu, Spring Bootâ€™un tÃ¼m Controllerâ€™larÄ±nda oluÅŸan istisnalarÄ± ele almak iÃ§in kullanÄ±lÄ±r.
//Bu sÄ±nÄ±f merkezi bir hata yÃ¶netimi saÄŸlar, yani her Controller iÃ§inde ayrÄ± ayrÄ± hata yÃ¶netimi yazmamÄ±za gerek kalmaz.
@ControllerAdvice
public class GlobalHandlerException {

    @ExceptionHandler(value = {BaseException.class})// ile sadece BaseException tÃ¼rÃ¼ndeki hatalar yakalanÄ±
    public ResponseEntity<ApiError> handleBaseException(BaseException exception, WebRequest request) {
        return ResponseEntity.badRequest().body(createApiError(exception.getMessage(), request));
    }


    //ğŸ”¹ Generic (<E>) bir hata mesajÄ± alarak ApiError nesnesi oluÅŸturur.
    //ğŸ”¹ message: Hata mesajÄ±nÄ± iÃ§erir.
    //ğŸ”¹ request: HTTP isteÄŸi hakkÄ±nda bilgi iÃ§erir.

    public <E> ApiError<E> createApiError(E message, WebRequest request) {
        ApiError<E> apiError = new ApiError<>();
        apiError.setStatus(HttpStatus.BAD_REQUEST.value());

        CustomExceptionDetails<E> exception = new CustomExceptionDetails<>();
        exception.setCreateTime(new Date().toString()); // Hatanin olusma zamani
        exception.setHostName(getHostname()); // HatanÄ±n hangi sunucuda gerÃ§ekleÅŸtiÄŸini belirler.
        exception.setPath(request.getDescription(false).substring(4));
        exception.setMessage(message); //Hata mesajÄ±nÄ± nesneye kaydeder.

        apiError.setException(exception); // OluÅŸturulan exception nesnesini ApiError iÃ§ine ekler.

        return apiError;
    }

    private String getHostname() {
        try {
            return Inet4Address.getLocalHost().getHostName(); // âœ… DeÄŸer dÃ¶ndÃ¼rÃ¼lÃ¼yor
        } catch (UnknownHostException e) {
            System.err.println("Hostname alÄ±nÄ±rken hata oluÅŸtu: " + e.getMessage());
            return "unknown-host"; // ğŸ”¥ Hata durumunda "unknown-host" dÃ¶ndÃ¼rmek daha gÃ¼venli!
        }
    }

}
